{"version":3,"sources":["components/UI/StatusTabs.js","components/UI/Chart.js","components/Views/Details/News.js","components/Views/Details/DetailList.js","components/UI/Modal.js","components/context/actions/auth/userUpdate.js","components/Views/Details/index.js"],"names":["StatusTabs","React","useState","portfolio","setPortfolioData","useContext","GlobalContext","quotes","stocksState","stocks","data","authState","auth","useEffect","axios","get","serverUrl","headers","Authorization","token","then","res","totalInvestment","currentValue","Object","keys","map","item","i","stockObj","user_holdings","TotalPrice","quantity","regularMarketPrice","catch","err","console","log","st","user","stats","key","price","find","op","sx","mb","display","height","spacing","container","justifyContent","alignItems","xs","md","lg","textAlign","backgroundColor","variant","currentWalletValue","toFixed","Chart","chartData","theme","useTheme","time","date","slice","amount","open","CustomTooltip","label","payload","length","className","ResponsiveContainer","LineChart","margin","top","right","bottom","YAxis","stroke","palette","text","secondary","style","typography","body2","Tooltip","content","Line","isAnimationActive","type","dataKey","primary","main","dot","News","news","List","width","bgcolor","overflow","boxShadow","webkitBoxShadow","outline","ListItem","ListItemText","title","Typography","component","color","href","link","target","description","Divider","DetailList","details","mr","fontWeight","regularMarketDayHigh","regularMarketDayLow","regularMarketOpen","regularMarketPreviousClose","regularMarketVolume","regularMarketChange","regularMarketChangePercent","position","left","transform","border","p","borderRadius","BasicModal","curentPrice","stockId","stockName","authDispatch","loading","alert","useAlert","setOpen","counter","setCounter","handelButton","reqParams","atPrice","url","dispatch","LOGIN_LOADING","post","localStorage","JSON","stringify","success","message","UPDATED_USER","error","response","LOGIN_ERROR","updateuser","Button","onClick","Modal","onClose","Box","opacity","CircularProgress","float","ButtonGroup","size","disabled","mt","Item","styled","Paper","subtitle1","padding","reducer","state","action","newsLoading","detailsLoading","chartLoading","initialState","stat","statLoading","Details","useReducer","controls","useSearchParams","q","filter","flexWrap","alignContent","elevation","to","pathname","textDecoration","m","ml","Grid","shortName","symbol"],"mappings":"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","file":"static/js/15.ffcb394e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { serverUrl } from \"../../constants\";\r\nimport { GlobalContext } from \"../context/Provider\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function StatusTabs() {\r\n  const [portfolio, setPortfolioData] = React.useState(null);\r\n\r\n  const {\r\n    stocksState: {\r\n      stocks: { quotes },\r\n    },\r\n    authState: {\r\n      auth: { data },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .get(serverUrl + \"/api/stats\", {\r\n          headers: {\r\n            Authorization: `Brearer ${data.token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          let portfolio = { totalInvestment: 0, currentValue: 0 };\r\n          Object.keys(res.data.data.quotes).map((item, i) => {\r\n            let stockObj = res.data.data.quotes[item][\"price\"];\r\n            portfolio.totalInvestment =\r\n              portfolio.totalInvestment + stockObj.user_holdings.TotalPrice;\r\n            portfolio.currentValue =\r\n              portfolio.currentValue +\r\n              stockObj.user_holdings.quantity * stockObj.regularMarketPrice;\r\n          });\r\n          setPortfolioData(portfolio);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (data && quotes === null) {\r\n      fetchData();\r\n    } else {\r\n      let portfolio = { totalInvestment: 0, currentValue: 0 };\r\n      const st = data.user.stats.map((item) => item.key);\r\n      st.map((item) => {\r\n        quotes[item].price.user_holdings = data.user.stats.find(\r\n          (op) => op.key === item\r\n        );\r\n      });\r\n      st.map((item, i) => {\r\n        let stockObj = quotes[item][\"price\"];\r\n        portfolio.totalInvestment =\r\n          portfolio.totalInvestment + stockObj.user_holdings.TotalPrice;\r\n        portfolio.currentValue =\r\n          portfolio.currentValue +\r\n          stockObj.user_holdings.quantity * stockObj.regularMarketPrice;\r\n      });\r\n      setPortfolioData(portfolio);\r\n    }\r\n    return () => {};\r\n  }, [data, quotes]);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mb: 1,\r\n        display: \"flex\",\r\n        height: \"fit-content\",\r\n      }}\r\n    >\r\n      {portfolio !== null ? (\r\n        <Grid\r\n          spacing={1}\r\n          container\r\n          justifyContent=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item xs={12} md={6} lg={2}>\r\n            <Paper\r\n              sx={{ textAlign: \"center\", backgroundColor: \"primary.dark\" }}\r\n            >\r\n              <Typography variant=\"subtitle2\">Total Value</Typography>\r\n\r\n              <Typography variant=\"button\" display=\"block\">\r\n                {(+data.user.currentWalletValue + +portfolio.currentValue).toFixed(2) }\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={2}>\r\n            <Paper\r\n              sx={{ textAlign: \"center\", backgroundColor: \"primary.dark\" }}\r\n            >\r\n              <Typography variant=\"subtitle2\">Investment</Typography>\r\n\r\n              <Typography variant=\"button\" display=\"block\">\r\n                {portfolio.totalInvestment}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={2}>\r\n            <Paper\r\n              sx={{ textAlign: \"center\", backgroundColor: \"primary.dark\" }}\r\n            >\r\n              <Typography variant=\"subtitle2\">Funds Available</Typography>\r\n\r\n              <Typography variant=\"button\" display=\"block\">\r\n              {data.user.currentWalletValue.toFixed(2)}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Tooltip,\r\n  YAxis,\r\n  Label,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\n// Generate Sales Data\r\n// function createData(time, amount) {\r\n//   return { time, amount };\r\n// }\r\n\r\n// const data = [\r\n//   createData(\"00:00\", 0),\r\n//   createData(\"03:00\", 300),\r\n//   createData(\"06:00\", 600),\r\n//   createData(\"09:00\", 800),\r\n//   createData(\"12:00\", 1500),\r\n//   createData(\"15:00\", 2000),\r\n//   createData(\"18:00\", 2400),\r\n//   createData(\"21:00\", 2400),\r\n//   createData(\"24:00\", undefined),\r\n// ];\r\n\r\nexport default function Chart({ chartData }) {\r\n  const theme = useTheme();\r\n\r\n  const data = chartData.map((item) => {\r\n    return { time: item.date.slice(0, 10), amount: item.open };\r\n  });\r\n\r\n  const CustomTooltip = ({ label, payload }) => {\r\n    if (label && payload && payload.length > 0) {\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">Amount on</p>\r\n          <p className=\"intro\">\r\n            {payload[0].payload.time}:--:{payload[0].payload.amount}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 5,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <YAxis\r\n            stroke={theme.palette.text.secondary}\r\n            style={theme.typography.body2}\r\n          >\r\n            {/* <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{\r\n                textAnchor: \"middle\",\r\n                fill: theme.palette.text.primary,\r\n                ...theme.typography.body1,\r\n              }}\r\n            >\r\n              Sales ($)\r\n            </Label> */}\r\n          </YAxis>\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"monotone\"\r\n            dataKey=\"amount\"\r\n            stroke={theme.palette.primary.main}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function News({ news }) {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 200,\r\n        bgcolor: \"background.paper\",\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.2em\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n          webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"rgba(0,0,0,.1)\",\r\n          outline: \"1px solid slategrey\",\r\n        },\r\n      }}\r\n    >\r\n      {news.map((item, i) => (\r\n        <div key={i}>\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText\r\n              primary={item.title}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    sx={{ display: \"inline\" }}\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"text.primary\"\r\n                  >\r\n                    {item.date.slice(0,16)}\r\n                  </Typography>\r\n                  <a href={item.link} target=\"_blank\">-{item.description.slice(0,50)}...</a>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function DetailList({ details }) {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 200,\r\n        bgcolor: \"background.paper\",\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.2em\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n          webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"rgba(0,0,0,.1)\",\r\n          outline: \"1px solid slategrey\",\r\n        },\r\n      }}\r\n    >\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Current Price\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketPrice}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Today High\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketDayHigh}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Today Low\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketDayLow}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Open\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketOpen}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Prev. Close\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketPreviousClose}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Volume\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketVolume}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Change\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketChange}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Change Percentage\r\n              </Typography>\r\n\r\n              <Typography color=\"primary\">\r\n                % {(details.price.regularMarketChangePercent * 100).toFixed(2)}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { GlobalContext } from \"../context/Provider\";\r\nimport { updateuser } from \"../context/actions/auth/userUpdate\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useAlert } from \"react-alert\";\r\nimport { serverUrl } from \"../../constants\";\r\n\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 250,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 2,\r\n  borderRadius:4,\r\n};\r\n\r\nexport default function BasicModal({ text, curentPrice, stockId, stockName }) {\r\n  const {\r\n    authDispatch,\r\n    authState: {\r\n      auth: { data, loading },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n  const alert = useAlert();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [counter, setCounter] = React.useState(0);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handelButton = (text) => {\r\n    setCounter(0)\r\n    let reqParams = {\r\n      atPrice: curentPrice,\r\n      quantity: counter,\r\n      stockId,\r\n      stockName,\r\n    };\r\n    let url =\r\n      text === \"BUY\"\r\n        ? serverUrl + \"/api/buy\"\r\n        : serverUrl + \"/api/sell\";\r\n    updateuser({ alert, url, reqParams, token: data.token })(authDispatch);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        sx={{\r\n          backgroundColor: text === \"BUY\" ? \"green\" : \"primary\",\r\n          width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        {text}\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              height: \"100vh\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              opacity: 0.8,\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <Box sx={style}>\r\n            <CloseIcon sx={{float:'right',mb:1}} onClick={() => setOpen(false)}/>\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n              <Typography sx={{ fontWeight: \"bold\", mr: 2 }}>\r\n                Quantity\r\n              </Typography>\r\n              <Button\r\n                disabled={counter < 1}\r\n                onClick={() => {\r\n                  setCounter(counter - 1);\r\n                }}\r\n              >\r\n                -\r\n              </Button>\r\n              <Button>{counter}</Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setCounter(counter + 1);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup\r\n              sx={{ width: \"100%\", mt: 2 }}\r\n              size=\"small\"\r\n              aria-label=\"small outlined button group\"\r\n            >\r\n              <Typography sx={{ fontWeight: \"bold\", mr: 3 }}>Amount</Typography>\r\n              <Button>{(counter * curentPrice).toFixed(4)}</Button>\r\n            </ButtonGroup>\r\n            <Button\r\n              sx={{\r\n                backgroundColor: text === \"BUY\" ? \"green\" : \"primary\",\r\n                mt: 3,\r\n                width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n              }}\r\n              onClick={() => handelButton(text)}\r\n              disabled={counter === 0}\r\n            >\r\n              {text}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { UPDATED_USER, LOGIN_ERROR, LOGIN_LOADING } from \"../actionTypes\";\r\n\r\nexport const updateuser =\r\n  ({ alert, url, reqParams, token }) =>\r\n  (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_LOADING,\r\n    });\r\n    axios\r\n      .post(\r\n        url,\r\n        { ...reqParams },\r\n        {\r\n          headers: {\r\n            Authorization: `Brearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        localStorage.data = JSON.stringify(res.data.data);\r\n        alert.success(res.data.message);\r\n        dispatch({\r\n          type: UPDATED_USER,\r\n          payload: res.data.data.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert.error(err.response.data.message);\r\n        dispatch({\r\n          type: LOGIN_ERROR,\r\n          payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\r\n        });\r\n      });\r\n  };\r\n","import React from \"react\";\r\nimport { Typography, Box, Paper, Grid, Divider } from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Chart from \"../../UI/Chart\";\r\nimport News from \"./News\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport DetailList from \"./DetailList\";\r\nimport StatusTabs from \"../../UI/StatusTabs\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context/Provider\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport axios from \"axios\";\r\nimport BasicModal from \"../../UI/Modal\";\r\nimport { serverUrl } from \"../../../constants\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.subtitle1,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"left\",\r\n  color: theme.palette.text.secondary,\r\n  overflow: \"auto\",\r\n  fontWeight: \"bold\",\r\n}));\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"NEWS_FETCHED\":\r\n      return {\r\n        ...state,\r\n        news: action.payload,\r\n        newsLoading: false,\r\n      };\r\n    case \"DETAILS_FETCHED\":\r\n      return {\r\n        ...state,\r\n        details: action.payload,\r\n        detailsLoading: false,\r\n      };\r\n    case \"CHART_DATA_FETCHED\":\r\n      return {\r\n        ...state,\r\n        chartData: action.payload,\r\n        chartLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  news: [],\r\n  newsLoading: true,\r\n  details: null,\r\n  detailsLoading: true,\r\n  chartData: null,\r\n  chartLoading: true,\r\n  data: null,\r\n  stat: null,\r\n  statLoading: true,\r\n};\r\n\r\nexport default function Details() {\r\n  const [controls, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const q = searchParams.get(\"id\");\r\n  const {\r\n    authState: {\r\n      auth: { data },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n\r\n  const stat = data.user.stats.filter((item) => item.key === q)[0];\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          serverUrl + \"/api/getNews\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"NEWS_FETCHED\",\r\n            payload: res.data.data.news,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          serverUrl + \"/api/getData\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"DETAILS_FETCHED\",\r\n            payload: res.data.data.quotes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          serverUrl + \"/api/history\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"CHART_DATA_FETCHED\",\r\n            payload: res.data.data.quotes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        mt: 2,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100vw\",\r\n        // backgroundColor: \"rgba(148, 31, 51, 0.05)\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          width: \"80vw\",\r\n        }}\r\n      >\r\n        <Link\r\n          to={{ pathname: \"/dashboard\" }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <ArrowBackIcon color=\"primary\" sx={{ m: 2 }} />\r\n            <Typography sx={{ mt: 2 }}>Dashboard</Typography>\r\n          </Box>{\" \"}\r\n        </Link>\r\n        <Box sx={{ mb: 1, ml: 5, mr: 5 }}>\r\n          <Grid container spacing={2} justifyContent=\"space-around\">\r\n            <Grid item xs={12}>\r\n              <StatusTabs />\r\n            </Grid>\r\n            <Grid item xs={12} md={7} sx={{ mt: 2, height: 260 }}>\r\n              {controls.chartLoading ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Chart chartData={controls.chartData} />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ height: 260 }}>\r\n              <Item>\r\n                {\"  \"}\r\n                {controls.details && controls.details.price.shortName} (\r\n                {controls.details && controls.details.price.symbol})\r\n                <ButtonGroup\r\n                  variant=\"contained\"\r\n                  aria-label=\"outlined primary button group\"\r\n                  sx={{ ml: 1 }}\r\n                >\r\n                  <BasicModal\r\n                    text={\"BUY\"}\r\n                    curentPrice={controls.details?.price.regularMarketPrice}\r\n                    stockId={controls.details?.price.symbol}\r\n                    stockName={controls.details?.price.shortName}\r\n                  />\r\n                  <BasicModal\r\n                    text={\"SELL\"}\r\n                    curentPrice={controls.details?.price.regularMarketPrice}\r\n                    stockId={controls.details?.price.symbol}\r\n                    stockName={controls.details?.price.shortName}\r\n                  />\r\n                </ButtonGroup>\r\n                <Item\r\n                  sx={{\r\n                    p: 1,\r\n                    m: 1,\r\n                    textAlign: \"center\",\r\n                    height: 140,\r\n                  }}\r\n                >\r\n                  {!stat ? (\r\n                    <Typography variant=\"subtitle1\">\r\n                      You Do not have this share in your portfolio\r\n                    </Typography>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <Typography variant=\"body2\">\r\n                        No. Of Shares in Holding <br /> #{\" \"}\r\n                        <strong>{stat.quantity}</strong>\r\n                      </Typography>\r\n                      <Divider />\r\n                      <Typography variant=\"body2\">\r\n                        Average Price of share holdings <br />${\" \"}\r\n                        <strong> {stat.TotalPrice / stat.quantity}</strong>\r\n                      </Typography>\r\n                      <Divider />\r\n                      <Typography variant=\"body2\">\r\n                        Total Price of share holdings <br />${\" \"}\r\n                        <strong> {stat.TotalPrice}</strong>\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                </Item>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} sx={{ m: 1 }}>\r\n              <Item>\r\n                News\r\n                {controls.newsLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <News news={controls.news} />\r\n                )}\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ m: 1 }}>\r\n              <Item>\r\n                Details\r\n                {controls.detailsLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <DetailList details={controls.details} />\r\n                )}\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n"],"sourceRoot":""}
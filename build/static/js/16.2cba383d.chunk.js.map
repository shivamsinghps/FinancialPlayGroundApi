{"version":3,"sources":["components/UI/Chart.js","components/Views/Details/News.js","components/Views/Details/DetailList.js","components/UI/Modal.js","components/context/actions/auth/userUpdate.js","components/Views/Details/index.js"],"names":["Chart","chartData","theme","useTheme","data","map","item","time","date","slice","amount","open","ResponsiveContainer","LineChart","margin","top","right","bottom","XAxis","dataKey","stroke","palette","text","secondary","style","typography","body2","YAxis","Line","isAnimationActive","type","primary","main","dot","News","news","List","sx","width","height","bgcolor","overflow","boxShadow","webkitBoxShadow","backgroundColor","outline","i","ListItem","alignItems","ListItemText","title","Typography","display","component","variant","color","href","link","target","description","Divider","DetailList","details","console","log","mr","fontWeight","price","regularMarketPrice","regularMarketDayHigh","regularMarketDayLow","regularMarketOpen","regularMarketPreviousClose","regularMarketVolume","regularMarketChange","regularMarketChangePercent","toFixed","position","left","transform","border","p","borderRadius","BasicModal","curentPrice","stockId","stockName","React","GlobalContext","authDispatch","authState","auth","loading","setOpen","counter","setCounter","handelButton","reqParams","atPrice","quantity","url","token","dispatch","LOGIN_LOADING","axios","post","headers","Authorization","then","res","localStorage","JSON","stringify","UPDATED_USER","payload","user","catch","err","LOGIN_ERROR","response","updateuser","Button","xs","md","lg","onClick","Modal","onClose","Box","justifyContent","opacity","CircularProgress","float","mb","ButtonGroup","size","disabled","mt","Item","styled","Paper","subtitle1","padding","spacing","textAlign","reducer","state","action","newsLoading","detailsLoading","chartLoading","initialState","stat","statLoading","Details","useReducer","controls","useSearchParams","q","get","useContext","stats","filter","key","useEffect","quotes","flexWrap","alignContent","elevation","to","pathname","textDecoration","m","flexGrow","ml","Grid","container","shortName","symbol","TotalPrice"],"mappings":"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","file":"static/js/16.2cba383d.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\n// Generate Sales Data\r\n// function createData(time, amount) {\r\n//   return { time, amount };\r\n// }\r\n\r\n// const data = [\r\n//   createData(\"00:00\", 0),\r\n//   createData(\"03:00\", 300),\r\n//   createData(\"06:00\", 600),\r\n//   createData(\"09:00\", 800),\r\n//   createData(\"12:00\", 1500),\r\n//   createData(\"15:00\", 2000),\r\n//   createData(\"18:00\", 2400),\r\n//   createData(\"21:00\", 2400),\r\n//   createData(\"24:00\", undefined),\r\n// ];\r\n\r\nexport default function Chart({ chartData }) {\r\n  const theme = useTheme();\r\n\r\n  const data = chartData.map((item) => {\r\n    return { time: item.date.slice(8, 10), amount: item.open };\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 10,\r\n          }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"time\"\r\n            stroke={theme.palette.text.secondary}\r\n            style={theme.typography.body2}\r\n          />\r\n          <YAxis\r\n            stroke={theme.palette.text.secondary}\r\n            style={theme.typography.body2}\r\n          >\r\n            {/* <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{\r\n                textAnchor: \"middle\",\r\n                fill: theme.palette.text.primary,\r\n                ...theme.typography.body1,\r\n              }}\r\n            >\r\n              Sales ($)\r\n            </Label> */}\r\n          </YAxis>\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"monotone\"\r\n            dataKey=\"amount\"\r\n            stroke={theme.palette.primary.main}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function News({ news }) {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 260,\r\n        bgcolor: \"background.paper\",\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.2em\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n          webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"rgba(0,0,0,.1)\",\r\n          outline: \"1px solid slategrey\",\r\n        },\r\n      }}\r\n    >\r\n      {news.map((item, i) => (\r\n        <div key={i}>\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText\r\n              primary={item.title}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    sx={{ display: \"inline\" }}\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"text.primary\"\r\n                  >\r\n                    {item.date.slice(0,16)}\r\n                  </Typography>\r\n                  <a href={item.link} target=\"_blank\">-{item.description.slice(0,50)}...</a>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function DetailList({ details }) {\r\n  console.log(\"kk\", details);\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 260,\r\n        bgcolor: \"background.paper\",\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.2em\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n          webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"rgba(0,0,0,.1)\",\r\n          outline: \"1px solid slategrey\",\r\n        },\r\n      }}\r\n    >\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Current Price\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketPrice}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Today High\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketDayHigh}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Todat Low\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketDayLow}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Open\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketOpen}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Prev. Close\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketPreviousClose}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Volume\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketVolume}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Change\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketChange}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Change Percentage\r\n              </Typography>\r\n\r\n              <Typography color=\"primary\">\r\n                % {(details.price.regularMarketChangePercent * 100).toFixed(2)}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { GlobalContext } from \"../context/Provider\";\r\nimport { updateuser } from \"../context/actions/auth/userUpdate\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 250,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 2,\r\n  borderRadius:4,\r\n};\r\n\r\nexport default function BasicModal({ text, curentPrice, stockId, stockName }) {\r\n  const {\r\n    authDispatch,\r\n    authState: {\r\n      auth: { data, loading },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [counter, setCounter] = React.useState(0);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handelButton = (text) => {\r\n    setCounter(0)\r\n    let reqParams = {\r\n      atPrice: curentPrice,\r\n      quantity: counter,\r\n      stockId,\r\n      stockName,\r\n    };\r\n    console.log(reqParams);\r\n    let url =\r\n      text === \"BUY\"\r\n        ? \"http://localhost:9001/api/buy\"\r\n        : \"http://localhost:9001/api/sell\";\r\n    updateuser({ url, reqParams, token: data.token })(authDispatch);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        sx={{\r\n          backgroundColor: text === \"BUY\" ? \"green\" : \"primary\",\r\n          width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        {text}\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              height: \"100vh\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              opacity: 0.8,\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <Box sx={style}>\r\n            <CloseIcon sx={{float:'right',mb:1}} onClick={() => setOpen(false)}/>\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n              <Typography sx={{ fontWeight: \"bold\", mr: 2 }}>\r\n                Quantity\r\n              </Typography>\r\n              <Button\r\n                disabled={counter < 1}\r\n                onClick={() => {\r\n                  setCounter(counter - 1);\r\n                }}\r\n              >\r\n                -\r\n              </Button>\r\n              <Button>{counter}</Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setCounter(counter + 1);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup\r\n              sx={{ width: \"100%\", mt: 2 }}\r\n              size=\"small\"\r\n              aria-label=\"small outlined button group\"\r\n            >\r\n              <Typography sx={{ fontWeight: \"bold\", mr: 3 }}>Amount</Typography>\r\n              <Button>{(counter * curentPrice).toFixed(4)}</Button>\r\n            </ButtonGroup>\r\n            <Button\r\n              sx={{\r\n                backgroundColor: text === \"BUY\" ? \"green\" : \"primary\",\r\n                mt: 3,\r\n                width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n              }}\r\n              onClick={() => handelButton(text)}\r\n              disabled={counter === 0}\r\n            >\r\n              {text}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { UPDATED_USER, LOGIN_ERROR, LOGIN_LOADING } from \"../actionTypes\";\r\n\r\nexport const updateuser =\r\n  ({ url, reqParams, token }) =>\r\n  (dispatch) => {\r\n          dispatch({\r\n      type: LOGIN_LOADING,\r\n    });\r\n    axios\r\n      .post(\r\n        url,\r\n        { ...reqParams },\r\n        {\r\n          headers: {\r\n            Authorization: `Brearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        localStorage.data = JSON.stringify(res.data.data);\r\n        dispatch({\r\n          type: UPDATED_USER,\r\n          payload: res.data.data.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: LOGIN_ERROR,\r\n          payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\r\n        });\r\n      });\r\n  };\r\n","import React from \"react\";\r\nimport { Typography, Box, Paper, Grid, Divider } from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Chart from \"../../UI/Chart\";\r\nimport News from \"./News\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport DetailList from \"./DetailList\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context/Provider\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport axios from \"axios\";\r\nimport BasicModal from \"../../UI/Modal\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.subtitle1,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"left\",\r\n  color: theme.palette.text.secondary,\r\n  overflow: \"auto\",\r\n  fontWeight: \"bold\",\r\n}));\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"NEWS_FETCHED\":\r\n      return {\r\n        ...state,\r\n        news: action.payload,\r\n        newsLoading: false,\r\n      };\r\n    case \"DETAILS_FETCHED\":\r\n      return {\r\n        ...state,\r\n        details: action.payload,\r\n        detailsLoading: false,\r\n      };\r\n    case \"CHART_DATA_FETCHED\":\r\n      return {\r\n        ...state,\r\n        chartData: action.payload,\r\n        chartLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  news: [],\r\n  newsLoading: true,\r\n  details: null,\r\n  detailsLoading: true,\r\n  chartData: null,\r\n  chartLoading: true,\r\n  data: null,\r\n  stat: null,\r\n  statLoading: true,\r\n};\r\n\r\nexport default function Details() {\r\n  const [controls, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const q = searchParams.get(\"id\");\r\n  const {\r\n    authState: {\r\n      auth: { data },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n\r\n  const stat = data.user.stats.filter((item) => item.key === q)[0];\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          \"http://localhost:9001/api/getNews\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"NEWS_FETCHED\",\r\n            payload: res.data.data.news,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          \"http://localhost:9001/api/getData\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"DETAILS_FETCHED\",\r\n            payload: res.data.data.quotes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          \"http://localhost:9001/api/history\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"CHART_DATA_FETCHED\",\r\n            payload: res.data.data.quotes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        height: { xs: \"200vh\", md: \"100vh\" },\r\n        width: \"100vw\",\r\n        backgroundColor: \"rgba(148, 31, 51, 0.05)\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          width: \"80vw\",\r\n        }}\r\n      >\r\n        <Link\r\n          to={{ pathname: \"/dashboard\" }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <ArrowBackIcon color=\"primary\" sx={{ m: 2 }} />\r\n            <Typography sx={{ mt: 2 }}>Dashboard</Typography>\r\n          </Box>{\" \"}\r\n        </Link>\r\n        <Box sx={{ flexGrow: 1, mb: 5, ml: 5, mr: 5 }}>\r\n          <Grid container spacing={2} justifyContent=\"space-around\">\r\n            <Grid item xs={12} md={7} sx={{ height: 320 }}>\r\n              {controls.chartLoading ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Chart chartData={controls.chartData} />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ height: 320 }}>\r\n              <Item>\r\n                {\"  \"}\r\n                {controls.details && controls.details.price.shortName} (\r\n                {controls.details && controls.details.price.symbol})\r\n                <ButtonGroup\r\n                  variant=\"contained\"\r\n                  aria-label=\"outlined primary button group\"\r\n                  sx={{ ml: 2 }}\r\n                >\r\n                  {/* <Button\r\n                    sx={{\r\n                      backgroundColor: \"green\",\r\n                      width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n                    }}\r\n                  >\r\n                    Buy\r\n                  </Button> */}\r\n                  <BasicModal\r\n                    text={\"BUY\"}\r\n                    curentPrice={controls.details?.price.regularMarketPrice}\r\n                    stockId={controls.details?.price.symbol}\r\n                    stockName={controls.details?.price.shortName}\r\n                  />\r\n                  <BasicModal\r\n                    text={\"SELL\"}\r\n                    curentPrice={controls.details?.price.regularMarketPrice}\r\n                    stockId={controls.details?.price.symbol}\r\n                    stockName={controls.details?.price.shortName}\r\n                  />\r\n                </ButtonGroup>\r\n                <Item\r\n                  sx={{\r\n                    p: 1,\r\n                    m: 2,\r\n                    textAlign: \"center\",\r\n                    height: 140,\r\n                  }}\r\n                >\r\n                  {!stat ? (\r\n                    <Typography variant=\"subtitle1\">\r\n                      You Do not have this share in your portfolio\r\n                    </Typography>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <Typography variant=\"body2\">\r\n                        No. Of Shares in Holding <br /> #{\" \"}\r\n                        <strong>{stat.quantity}</strong>\r\n                      </Typography>\r\n                      <Divider />\r\n                      <Typography variant=\"body2\">\r\n                        Average Price of share holdings <br />${\" \"}\r\n                        <strong> {stat.TotalPrice / stat.quantity}</strong>\r\n                      </Typography>\r\n                      <Divider />\r\n                      <Typography variant=\"body2\">\r\n                        Total Price of share holdings <br />${\" \"}\r\n                        <strong> {stat.TotalPrice}</strong>\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                </Item>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} sx={{ height: 320, m: 1 }}>\r\n              <Item>\r\n                News\r\n                {controls.newsLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <News news={controls.news} />\r\n                )}\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ height: 320, m: 1 }}>\r\n              <Item>\r\n                Details\r\n                {controls.detailsLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <DetailList details={controls.details} />\r\n                )}\r\n              </Item>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n"],"sourceRoot":""}
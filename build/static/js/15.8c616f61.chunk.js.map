{"version":3,"sources":["components/UI/StatusTabs.js","components/UI/Chart.js","components/Views/Details/News.js","components/Views/Details/DetailList.js","components/UI/Modal.js","components/context/actions/auth/userUpdate.js","components/Views/Details/index.js"],"names":["StatusTabs","sx","m","display","height","container","justifyContent","alignItems","item","xs","md","lg","textAlign","backgroundColor","variant","fontWeight","Chart","chartData","theme","useTheme","data","map","time","date","slice","amount","open","ResponsiveContainer","LineChart","margin","top","right","bottom","XAxis","dataKey","stroke","palette","text","secondary","style","typography","body2","YAxis","Line","isAnimationActive","type","primary","main","dot","News","news","List","width","bgcolor","overflow","boxShadow","webkitBoxShadow","outline","i","ListItem","ListItemText","title","Typography","component","color","href","link","target","description","Divider","DetailList","details","console","log","mr","price","regularMarketPrice","regularMarketDayHigh","regularMarketDayLow","regularMarketOpen","regularMarketPreviousClose","regularMarketVolume","regularMarketChange","regularMarketChangePercent","toFixed","position","left","transform","border","p","borderRadius","BasicModal","curentPrice","stockId","stockName","React","GlobalContext","authDispatch","authState","auth","loading","alert","useAlert","setOpen","counter","setCounter","handelButton","reqParams","atPrice","quantity","url","token","dispatch","LOGIN_LOADING","axios","post","headers","Authorization","then","res","localStorage","JSON","stringify","success","message","UPDATED_USER","payload","user","catch","err","error","response","LOGIN_ERROR","updateuser","Button","onClick","Modal","onClose","Box","opacity","CircularProgress","float","mb","ButtonGroup","size","disabled","mt","Item","styled","Paper","subtitle1","padding","spacing","reducer","state","action","newsLoading","detailsLoading","chartLoading","initialState","stat","statLoading","Details","useReducer","controls","useSearchParams","q","get","useContext","stats","filter","key","useEffect","quotes","flexWrap","alignContent","elevation","to","pathname","textDecoration","ml","Grid","shortName","symbol","TotalPrice"],"mappings":"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","file":"static/js/15.8c616f61.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function StatusTabs() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        m:1,\r\n        display: \"flex\",\r\n        height: \"fit-content\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <Paper sx={{ textAlign: \"center\", backgroundColor: \"primary.dark\", }}>\r\n            <Typography variant=\"h6\">Total Value</Typography>\r\n\r\n            <Typography variant=\"h5\" sx={{fontWeight:\"bold\"}}>80</Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <Paper sx={{ textAlign: \"center\", backgroundColor: \"primary.dark\" }}>\r\n            <Typography variant=\"h6\" >Investment</Typography>\r\n\r\n            <Typography variant=\"h5\" sx={{fontWeight:\"bold\"}}>70</Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <Paper sx={{ textAlign: \"center\", backgroundColor: \"primary.dark\" }}>\r\n            <Typography variant=\"h6\">Funds Available</Typography>\r\n\r\n            <Typography variant=\"h5\" sx={{fontWeight:\"bold\"}}>30</Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\n// Generate Sales Data\r\n// function createData(time, amount) {\r\n//   return { time, amount };\r\n// }\r\n\r\n// const data = [\r\n//   createData(\"00:00\", 0),\r\n//   createData(\"03:00\", 300),\r\n//   createData(\"06:00\", 600),\r\n//   createData(\"09:00\", 800),\r\n//   createData(\"12:00\", 1500),\r\n//   createData(\"15:00\", 2000),\r\n//   createData(\"18:00\", 2400),\r\n//   createData(\"21:00\", 2400),\r\n//   createData(\"24:00\", undefined),\r\n// ];\r\n\r\nexport default function Chart({ chartData }) {\r\n  const theme = useTheme();\r\n\r\n  const data = chartData.map((item) => {\r\n    return { time: item.date.slice(8, 10), amount: item.open };\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 5,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"time\"\r\n            stroke={theme.palette.text.secondary}\r\n            style={theme.typography.body2}\r\n          />\r\n          <YAxis\r\n            stroke={theme.palette.text.secondary}\r\n            style={theme.typography.body2}\r\n          >\r\n            {/* <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{\r\n                textAnchor: \"middle\",\r\n                fill: theme.palette.text.primary,\r\n                ...theme.typography.body1,\r\n              }}\r\n            >\r\n              Sales ($)\r\n            </Label> */}\r\n          </YAxis>\r\n          <Line\r\n            isAnimationActive={false}\r\n            type=\"monotone\"\r\n            dataKey=\"amount\"\r\n            stroke={theme.palette.primary.main}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function News({ news }) {\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 200,\r\n        bgcolor: \"background.paper\",\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.2em\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n          webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"rgba(0,0,0,.1)\",\r\n          outline: \"1px solid slategrey\",\r\n        },\r\n      }}\r\n    >\r\n      {news.map((item, i) => (\r\n        <div key={i}>\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText\r\n              primary={item.title}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    sx={{ display: \"inline\" }}\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"text.primary\"\r\n                  >\r\n                    {item.date.slice(0,16)}\r\n                  </Typography>\r\n                  <a href={item.link} target=\"_blank\">-{item.description.slice(0,50)}...</a>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function DetailList({ details }) {\r\n  console.log(\"kk\", details);\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        height: 200,\r\n        bgcolor: \"background.paper\",\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n          width: \"0.2em\",\r\n        },\r\n        \"&::-webkit-scrollbar-track\": {\r\n          boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n          webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n        },\r\n        \"&::-webkit-scrollbar-thumb\": {\r\n          backgroundColor: \"rgba(0,0,0,.1)\",\r\n          outline: \"1px solid slategrey\",\r\n        },\r\n      }}\r\n    >\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Current Price\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketPrice}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Today High\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketDayHigh}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Today Low\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketDayLow}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Open\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketOpen}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Prev. Close\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketPreviousClose}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Volume\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketVolume}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Change\r\n              </Typography>\r\n              <Typography color=\"primary\">\r\n                $ {details.price.regularMarketChange}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemText\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                sx={{ display: \"inline\", mr: 1, fontWeight: \"bold\" }}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"text.primary\"\r\n              >\r\n                Change Percentage\r\n              </Typography>\r\n\r\n              <Typography color=\"primary\">\r\n                % {(details.price.regularMarketChangePercent * 100).toFixed(2)}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { GlobalContext } from \"../context/Provider\";\r\nimport { updateuser } from \"../context/actions/auth/userUpdate\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 250,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 2,\r\n  borderRadius:4,\r\n};\r\n\r\nexport default function BasicModal({ text, curentPrice, stockId, stockName }) {\r\n  const {\r\n    authDispatch,\r\n    authState: {\r\n      auth: { data, loading },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n  const alert = useAlert();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [counter, setCounter] = React.useState(0);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handelButton = (text) => {\r\n    setCounter(0)\r\n    let reqParams = {\r\n      atPrice: curentPrice,\r\n      quantity: counter,\r\n      stockId,\r\n      stockName,\r\n    };\r\n    console.log(reqParams);\r\n    let url =\r\n      text === \"BUY\"\r\n        ? \"http://localhost:9001/api/buy\"\r\n        : \"http://localhost:9001/api/sell\";\r\n    updateuser({ alert, url, reqParams, token: data.token })(authDispatch);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        sx={{\r\n          backgroundColor: text === \"BUY\" ? \"green\" : \"primary\",\r\n          width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        {text}\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              height: \"100vh\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              opacity: 0.8,\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : (\r\n          <Box sx={style}>\r\n            <CloseIcon sx={{float:'right',mb:1}} onClick={() => setOpen(false)}/>\r\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n              <Typography sx={{ fontWeight: \"bold\", mr: 2 }}>\r\n                Quantity\r\n              </Typography>\r\n              <Button\r\n                disabled={counter < 1}\r\n                onClick={() => {\r\n                  setCounter(counter - 1);\r\n                }}\r\n              >\r\n                -\r\n              </Button>\r\n              <Button>{counter}</Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setCounter(counter + 1);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup\r\n              sx={{ width: \"100%\", mt: 2 }}\r\n              size=\"small\"\r\n              aria-label=\"small outlined button group\"\r\n            >\r\n              <Typography sx={{ fontWeight: \"bold\", mr: 3 }}>Amount</Typography>\r\n              <Button>{(counter * curentPrice).toFixed(4)}</Button>\r\n            </ButtonGroup>\r\n            <Button\r\n              sx={{\r\n                backgroundColor: text === \"BUY\" ? \"green\" : \"primary\",\r\n                mt: 3,\r\n                width: { xs: \"6rem\", md: \"8rem\", lg: \"10rem\" },\r\n              }}\r\n              onClick={() => handelButton(text)}\r\n              disabled={counter === 0}\r\n            >\r\n              {text}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { UPDATED_USER, LOGIN_ERROR, LOGIN_LOADING } from \"../actionTypes\";\r\n\r\nexport const updateuser =\r\n  ({ alert, url, reqParams, token }) =>\r\n  (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_LOADING,\r\n    });\r\n    axios\r\n      .post(\r\n        url,\r\n        { ...reqParams },\r\n        {\r\n          headers: {\r\n            Authorization: `Brearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        localStorage.data = JSON.stringify(res.data.data);\r\n        alert.success(res.data.message);\r\n        dispatch({\r\n          type: UPDATED_USER,\r\n          payload: res.data.data.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert.error(err.response.data.message);\r\n        dispatch({\r\n          type: LOGIN_ERROR,\r\n          payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\r\n        });\r\n      });\r\n  };\r\n","import React from \"react\";\r\nimport { Typography, Box, Paper, Grid, Divider } from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Chart from \"../../UI/Chart\";\r\nimport News from \"./News\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport DetailList from \"./DetailList\";\r\nimport StatusTabs from \"../../UI/StatusTabs\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context/Provider\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport axios from \"axios\";\r\nimport BasicModal from \"../../UI/Modal\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.subtitle1,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"left\",\r\n  color: theme.palette.text.secondary,\r\n  overflow: \"auto\",\r\n  fontWeight: \"bold\",\r\n}));\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"NEWS_FETCHED\":\r\n      return {\r\n        ...state,\r\n        news: action.payload,\r\n        newsLoading: false,\r\n      };\r\n    case \"DETAILS_FETCHED\":\r\n      return {\r\n        ...state,\r\n        details: action.payload,\r\n        detailsLoading: false,\r\n      };\r\n    case \"CHART_DATA_FETCHED\":\r\n      return {\r\n        ...state,\r\n        chartData: action.payload,\r\n        chartLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  news: [],\r\n  newsLoading: true,\r\n  details: null,\r\n  detailsLoading: true,\r\n  chartData: null,\r\n  chartLoading: true,\r\n  data: null,\r\n  stat: null,\r\n  statLoading: true,\r\n};\r\n\r\nexport default function Details() {\r\n  const [controls, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const q = searchParams.get(\"id\");\r\n  const {\r\n    authState: {\r\n      auth: { data },\r\n    },\r\n  } = React.useContext(GlobalContext);\r\n\r\n  const stat = data.user.stats.filter((item) => item.key === q)[0];\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          \"http://localhost:9001/api/getNews\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"NEWS_FETCHED\",\r\n            payload: res.data.data.news,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          \"http://localhost:9001/api/getData\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"DETAILS_FETCHED\",\r\n            payload: res.data.data.quotes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .post(\r\n          \"http://localhost:9001/api/history\",\r\n          { stockId: q },\r\n          {\r\n            headers: {\r\n              Authorization: `Brearer ${data.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          dispatch({\r\n            type: \"CHART_DATA_FETCHED\",\r\n            payload: res.data.data.quotes,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    if (q && data) {\r\n      fetchData();\r\n    }\r\n  }, [q, data]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        mt:2,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100vw\",\r\n        // backgroundColor: \"rgba(148, 31, 51, 0.05)\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          width: \"80vw\",\r\n        }}\r\n      >\r\n        <Link\r\n          to={{ pathname: \"/dashboard\" }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <ArrowBackIcon color=\"primary\" sx={{ m: 2 }} />\r\n            <Typography sx={{ mt: 2 }}>Dashboard</Typography>\r\n          </Box>{\" \"}\r\n        </Link>\r\n        <Box sx={{ mb: 1, ml: 5, mr: 5 }}>\r\n          <Grid container spacing={2} justifyContent=\"space-around\">\r\n            <Grid item xs={12} md={7} sx={{ mt:2,height: 260 }}>\r\n              {controls.chartLoading ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Chart chartData={controls.chartData} />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ height: 260 }}>\r\n              <Item>\r\n                {\"  \"}\r\n                {controls.details && controls.details.price.shortName} (\r\n                {controls.details && controls.details.price.symbol})\r\n                <ButtonGroup\r\n                  variant=\"contained\"\r\n                  aria-label=\"outlined primary button group\"\r\n                  sx={{ ml: 1 }}\r\n                >\r\n                  <BasicModal\r\n                    text={\"BUY\"}\r\n                    curentPrice={controls.details?.price.regularMarketPrice}\r\n                    stockId={controls.details?.price.symbol}\r\n                    stockName={controls.details?.price.shortName}\r\n                  />\r\n                  <BasicModal\r\n                    text={\"SELL\"}\r\n                    curentPrice={controls.details?.price.regularMarketPrice}\r\n                    stockId={controls.details?.price.symbol}\r\n                    stockName={controls.details?.price.shortName}\r\n                  />\r\n                </ButtonGroup>\r\n                <Item\r\n                  sx={{\r\n                    p: 1,\r\n                    m: 1,\r\n                    textAlign: \"center\",\r\n                    height: 140,\r\n                  }}\r\n                >\r\n                  {!stat ? (\r\n                    <Typography variant=\"subtitle1\">\r\n                      You Do not have this share in your portfolio\r\n                    </Typography>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <Typography variant=\"body2\">\r\n                        No. Of Shares in Holding <br /> #{\" \"}\r\n                        <strong>{stat.quantity}</strong>\r\n                      </Typography>\r\n                      <Divider />\r\n                      <Typography variant=\"body2\">\r\n                        Average Price of share holdings <br />${\" \"}\r\n                        <strong> {stat.TotalPrice / stat.quantity}</strong>\r\n                      </Typography>\r\n                      <Divider />\r\n                      <Typography variant=\"body2\">\r\n                        Total Price of share holdings <br />${\" \"}\r\n                        <strong> {stat.TotalPrice}</strong>\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                </Item>\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} sx={{ m: 1 }}>\r\n              <Item>\r\n                News\r\n                {controls.newsLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <News news={controls.news} />\r\n                )}\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ m: 1 }}>\r\n              <Item>\r\n                Details\r\n                {controls.detailsLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <DetailList details={controls.details} />\r\n                )}\r\n              </Item>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <StatusTabs />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n"],"sourceRoot":""}